<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/20200808/16107/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>如何利用Hexo建立一個Blog</title>
    <url>/20200810/53228/</url>
    <content><![CDATA[<h1 id="為什麼要建立-Hexo-部落格"><a href="#為什麼要建立-Hexo-部落格" class="headerlink" title="為什麼要建立 Hexo 部落格"></a>為什麼要建立 Hexo 部落格</h1><p>從今年開始學習前端技術，不知不覺也過了半年了，覺得自己的技術有所成長，<br>可以藉由寫文章幫助大家並整合自己的技術。平台這麼多，為何我會選擇 Hexo ？</p>
<p>因為 Hexo 是要用指令來開發，也必須配合 Git 做使用，，是不是摸蜊仔兼洗褲呢！</p>
<p> Hexo 是使用 Ｍarkdown 撰寫格式，也需要熟悉 Git 指令還有一點 npm 的知識，<br> 可以參考下方連結教學。</p>
<p><a href="https://ithelp.ithome.com.tw/articles/10203758">Ｍarkdown</a><br><a href="https://w3c.hexschool.com/git/cfdbd310">Git</a><br><a href="https://hsiangfeng.github.io/nodejs/20190626/1317979814/">npm </a></p>
<hr>
<h2 id="建立-Hexo-部落格"><a href="#建立-Hexo-部落格" class="headerlink" title="建立 Hexo 部落格"></a>建立 Hexo 部落格</h2><h3 id="版本與環境"><a href="#版本與環境" class="headerlink" title="版本與環境"></a>版本與環境</h3><p>作業系統： macOs</p>
<p>Nodejs:：v12.18.3 LTS</p>
<p>IDE：VS Code</p>
<h3 id="本文環境"><a href="#本文環境" class="headerlink" title="本文環境"></a>本文環境</h3><h4 id="Hexo-版本"><a href="#Hexo-版本" class="headerlink" title="Hexo 版本"></a>Hexo 版本</h4><p>hexo: 5.0.0</p>
<h2 id="hexo-cli-4-1-0"><a href="#hexo-cli-4-1-0" class="headerlink" title="hexo-cli: 4.1.0"></a>hexo-cli: 4.1.0</h2><h2 id="從-GitHub-建立新的數據庫-Creat-a-new-Repository"><a href="#從-GitHub-建立新的數據庫-Creat-a-new-Repository" class="headerlink" title="從 GitHub 建立新的數據庫 (Creat a new Repository)"></a>從 GitHub 建立新的數據庫 (Creat a new Repository)</h2><p><img src="/images/hexoblog1.png"></p>
<ul>
<li>名稱務必要謹慎設定，因為之後就無法更改，若想要修改只能重新建立數據庫，記得後面的 github.io 要打一樣的。</li>
<li>下方的權限直接用 Public (公開) 即可，若一開始還不想公開就選擇 Private (私人的)。</li>
<li>其他不用更動，直接選擇最下方的綠色按鈕 (Create repostory) 建立數據庫<br><img src="/images/hexoblog2.png"></li>
</ul>
<hr>
<h2 id="安裝-Hexo"><a href="#安裝-Hexo" class="headerlink" title="安裝 Hexo"></a>安裝 Hexo</h2><p>使用指令安裝 Hexo，開啟終端機，輸入以下指令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>
<p>指令說明：透過 npm 在 全域 (-g) 下安裝 Hexo-Cli</p>
<p>可以透過以下指令，確認是否安裝成功</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure>
<p><img src="/images/hexoblog3.png"></p>
<h3 id="建立-Hexo"><a href="#建立-Hexo" class="headerlink" title="建立 Hexo"></a>建立 Hexo</h3><p>在要存取的硬碟中開啟一個新資料夾，並自訂名稱 (建議用英文)，之後的資料就會在這個資料夾內，並輸入以下指令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init projectname</span><br></pre></td></tr></table></figure>
<ul>
<li>projectname 改成自己定義的名稱，建議用英文，安裝完成後如下圖：<br><img src="/images/hexoblog4.png"></li>
</ul>
<hr>
<h3 id="進入-Hexo"><a href="#進入-Hexo" class="headerlink" title="進入 Hexo"></a>進入 Hexo</h3><p>在終端機輸入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd projectname</span><br></pre></td></tr></table></figure>
<ul>
<li>projectname 為自定義名稱<h3 id="安裝相關套件"><a href="#安裝相關套件" class="headerlink" title="安裝相關套件"></a>安裝相關套件</h3>由於建立完畢的 Hexo 還必須安裝 npm 相關套件，所以必須在這個目錄下輸入：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure></li>
<li>指令說明：將 package.json 相依套件下載下來</li>
</ul>
<hr>
<h3 id="啟動-Hexo"><a href="#啟動-Hexo" class="headerlink" title="啟動 Hexo"></a>啟動 Hexo</h3><p>完成上方內容後再輸入下方指令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure>
<p><img src="/images/hexoblog5.png"><br><img src="/images/hexoblog6.png"></p>
<ul>
<li>就會產生一個本地端 4000的網頁<h2 id="將資料上傳至-GitHub"><a href="#將資料上傳至-GitHub" class="headerlink" title="將資料上傳至 GitHub"></a>將資料上傳至 GitHub</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git init &#x2F;&#x2F;創建一個 git 初始檔</span><br><span class="line">git add README.md</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git remote add origin https:&#x2F;&#x2F;github.com&#x2F;jason06286&#x2F;1234.git &#x2F;&#x2F;創建一個遠端資料庫</span><br><span class="line">git push -u origin master &#x2F;&#x2F; 將資料上傳至遠端 master 分支</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<img src="/images/hexoblog7.png"><h3 id="部署-GitHub"><a href="#部署-GitHub" class="headerlink" title="部署 GitHub"></a>部署 GitHub</h3></li>
</ul>
<p>需要安裝一個 Hexo 沒有安裝的插件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p>修改 _config.yml 中的 Depolyment 如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git &#x2F;&#x2F; 模式</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;yourGithub &#x2F;yourGithubName.github.io.git &#x2F;&#x2F; 自己 GitHub repos 連結</span><br><span class="line">  branch: master &#x2F;&#x2F; 分支</span><br></pre></td></tr></table></figure>
<p>修改完後輸入下方指令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g d</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li>指令說明：g →生成靜態頁面、d →部屬<h2 id="其他指令"><a href="#其他指令" class="headerlink" title="其他指令"></a>其他指令</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new &quot;title&quot;</span><br></pre></td></tr></table></figure></li>
<li>建立新文章<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></li>
<li>s →啟動伺服器 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g d</span><br></pre></td></tr></table></figure></li>
<li>g →生成靜態頁面 d →部屬模式 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure></li>
<li>刪除已生成的靜態頁面及快取檔案<h3 id="刪除指定文章"><a href="#刪除指定文章" class="headerlink" title="刪除指定文章"></a>刪除指定文章</h3>在本地端 source 資料夾，把指定的 md. 檔案刪除，在重新佈署即可，指令為：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g d</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<blockquote>
<p>參考文章：<a href="https://hsiangfeng.github.io/hexo/20190411/932826160/">https://hsiangfeng.github.io/hexo/20190411/932826160/</a><br>參考文章：<a href="https://www.youtube.com/watch?v=jOJI9ekTzK8&amp;t=3809s">https://www.youtube.com/watch?v=jOJI9ekTzK8&amp;t=3809s</a></p>
</blockquote>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 基礎設定</title>
    <url>/20200811/17504/</url>
    <content><![CDATA[<h1 id="Hexo-基礎設定"><a href="#Hexo-基礎設定" class="headerlink" title="Hexo 基礎設定"></a>Hexo 基礎設定</h1><h2 id="設定網站名稱、及作者名稱"><a href="#設定網站名稱、及作者名稱" class="headerlink" title="設定網站名稱、及作者名稱"></a>設定網站名稱、及作者名稱</h2><p>開啟目錄資料夾中的 <code>_config.yml</code>搜尋<code>site</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: JasonCodingBlog &#x2F;&#x2F;網站名稱</span><br><span class="line">subtitle: &#39;Coding Road&#39; &#x2F;&#x2F;副標題</span><br><span class="line">description: &#39;不要等待運氣來臨，應該主動去努力掌握知識。&#39; &#x2F;&#x2F;網站敘述</span><br><span class="line">keywords: &#x2F;&#x2F;關鍵字</span><br><span class="line">author: Jason06286 &#x2F;&#x2F;作者名稱</span><br><span class="line">language: zh-tw &#x2F;&#x2F;語系</span><br><span class="line">timezone: &#39;&#39;</span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &#39;http:&#x2F;&#x2F;yoursite.com&#x2F;child&#39; and root as &#39;&#x2F;child&#x2F;&#39;</span><br><span class="line">url: https:&#x2F;&#x2F;jason06286.github.io&#x2F; &#x2F;&#x2F;輸入您的網站URL</span><br><span class="line">root: &#x2F;</span><br><span class="line">permalink: :year:month:day&#x2F;:abbrlink&#x2F;</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: true # Set to false to remove trailing &#39;index.html&#39; from permalinks</span><br><span class="line">  trailing_html: true # Set to false to remove trailing &#39;.html&#39; from permalinks</span><br></pre></td></tr></table></figure>
<h2 id="設定主題"><a href="#設定主題" class="headerlink" title="設定主題"></a>設定主題</h2><p>下載 themes 並解壓縮到資料夾內的 themes 資料夾內，<br>開啟目錄資料夾中的 <code>_config.yml</code>搜尋<code>theme</code><br><img src="/images/hexoset/hexoset1.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class="line">## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span><br><span class="line">theme: hexo-theme-next-master &#x2F;&#x2F;更改成你所下載的主題名稱</span><br></pre></td></tr></table></figure>
<h2 id="Next"><a href="#Next" class="headerlink" title="Next"></a>Next</h2><h3 id="加入-Google-Analytics"><a href="#加入-Google-Analytics" class="headerlink" title="加入 Google Analytics"></a>加入 Google Analytics</h3><p>這邊使用 NexT 7.8.0 模板作舉例。<br>進入主題 (Next) 中尋找 <code>_config.yml</code> 檔案，搜尋<code>Google Analytics</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">google_analytics:</span><br><span class="line">  tracking_id: </span><br><span class="line">  only_pageview: false</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">google_analytics:</span><br><span class="line">  tracking_id: UA-XXXXXX-1 &#x2F;&#x2F;UAID追蹤碼</span><br><span class="line">  only_pageview: false</span><br></pre></td></tr></table></figure>
<h3 id="更改-Next-主題樣式"><a href="#更改-Next-主題樣式" class="headerlink" title="更改 Next 主題樣式"></a>更改 Next 主題樣式</h3><p>進入主題 (Next) 中尋找 <code>_config.yml</code> 檔案，搜尋<code>scheme</code><br>想要使用哪一個，打開註解即可。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Schemes</span><br><span class="line"># scheme: Muse</span><br><span class="line"># scheme: Mist</span><br><span class="line"># scheme: Pisces</span><br><span class="line">scheme: Gemini </span><br></pre></td></tr></table></figure>
<h3 id="設置側邊欄"><a href="#設置側邊欄" class="headerlink" title="設置側邊欄"></a>設置側邊欄</h3><p>進入主題 (Next) 中尋找 <code>_config.yml</code> 檔案，搜尋<code>menu</code>，<br>想要使用哪一個，打開註解即可，若<code>tags</code>、<code>categories</code>跳出 404，<br>請參照此<a href="https://www.zhihu.com/question/29017171">解決辦法</a>。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F; || fa fa-home</span><br><span class="line">  # about: &#x2F;about&#x2F; || fa fa-user</span><br><span class="line">  tags: &#x2F;tags&#x2F; || fa fa-tags</span><br><span class="line">  categories: &#x2F;categories&#x2F; || fa fa-th</span><br><span class="line">  archives: &#x2F;archives&#x2F; || fa fa-archive</span><br><span class="line">  # schedule: &#x2F;schedule&#x2F; || fa fa-calendar</span><br><span class="line">  # sitemap: &#x2F;sitemap.xml || fa fa-sitemap</span><br><span class="line">  #commonweal: &#x2F;404&#x2F; || fa fa-heartbeat</span><br></pre></td></tr></table></figure>
<h3 id="開啟-Social-Media"><a href="#開啟-Social-Media" class="headerlink" title="開啟 Social Media"></a>開啟 Social Media</h3><p>進入主題 (Next) 中尋找 <code>_config.yml</code> 檔案，搜尋<code>menu</code>，<br>想要使用哪一個，打開註解即可。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">social:</span><br><span class="line">  GitHub: https:&#x2F;&#x2F;github.com&#x2F;jason06286 || fab fa-github</span><br><span class="line">  E-Mail: mailto:dj4871114@gmail.com || fa fa-envelope</span><br><span class="line">  #Weibo: https:&#x2F;&#x2F;weibo.com&#x2F;yourname || fab fa-weibo</span><br><span class="line">  #Google: https:&#x2F;&#x2F;plus.google.com&#x2F;yourname || fab fa-google</span><br><span class="line">  #Twitter: https:&#x2F;&#x2F;twitter.com&#x2F;yourname || fab fa-twitter</span><br><span class="line">  FB Page: https:&#x2F;&#x2F;www.facebook.com&#x2F;profile.php?id&#x3D;100000248997692 || fab fa-facebook</span><br><span class="line">  #StackOverflow: https:&#x2F;&#x2F;stackoverflow.com&#x2F;yourname || fab fa-stack-overflow</span><br><span class="line">  #YouTube: https:&#x2F;&#x2F;youtube.com&#x2F;yourname || fab fa-youtube</span><br><span class="line">  #Instagram: https:&#x2F;&#x2F;instagram.com&#x2F;yourname || fab fa-instagram</span><br><span class="line">  #Skype: skype:yourname?call|chat || fab fa-skype</span><br></pre></td></tr></table></figure>
<h3 id="開啟-Gitalk-留言版"><a href="#開啟-Gitalk-留言版" class="headerlink" title="開啟 Gitalk 留言版"></a>開啟 Gitalk 留言版</h3><h4 id="建立-GitHub-OAuth-APP"><a href="#建立-GitHub-OAuth-APP" class="headerlink" title="建立 GitHub OAuth APP"></a>建立 GitHub OAuth APP</h4><p>由於要使用 Gitalk 必須先有 GitHub OAuth，首先開啟 GitHub → Setting<br><img src="/images/hexoset/hexoset2.png"><br>接下來選擇 Developer settings<br><img src="/images/hexoset/hexoset3.png"><br>然後點 OAuth Apps ，新增 New OAuth Apps<br><img src="/images/hexoset/hexoset4.png"><br>接下來依照欄位填寫即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Application name - 應用程式名稱</span><br><span class="line">Homepage URL - 應用程式網域 → 部落格網址</span><br><span class="line">Application description - 應用程式描述</span><br><span class="line">Authorization callback URL - 授權回應網址 → 部落格網址</span><br></pre></td></tr></table></figure>
<p><img src="/images/hexoset/hexoset5.png"><br>申請完之後，你會獲得兩組 ID (Client ID、Client Secret)<br><img src="/images/hexoset/hexoset6.png"></p>
<h4 id="Gitalk"><a href="#Gitalk" class="headerlink" title="Gitalk"></a>Gitalk</h4><p>進入主題 (Next) 中尋找 <code>_config.yml</code> 檔案，搜尋<code>Gitalk</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gitalk:</span><br><span class="line">  enable: true</span><br><span class="line">  github_id:  &#x2F;&#x2F;GitHub 作者帳號</span><br><span class="line">  repo: jason06286.github.io &#x2F;&#x2F;你的 Repo 名稱，通常就是網域</span><br><span class="line">  client_id: xxxxxxxx &#x2F;&#x2F;剛剛申請的 Client ID</span><br><span class="line">  client_secret: xxxxxxxx &#x2F;&#x2F;剛剛申請的 Client Secret</span><br><span class="line">  admin_user: jason06286 &#x2F;&#x2F;管理者的帳號</span><br><span class="line">  distraction_free_mode: true &#x2F;&#x2F;無干擾模式</span><br><span class="line">  language: zh-TW &#x2F;&#x2F;語系</span><br></pre></td></tr></table></figure>













]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>從零開始，如何從 Git push 到 GitHub？</title>
    <url>/20200811/38287/</url>
    <content><![CDATA[<p>本篇適用於完全不會<code>Git</code>的人，將一步步帶你上傳檔案至<code>GitHub</code></p>
<h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><p>首先到 <a href="https://git-scm.com/"> Git 官網</a> ，下載<code>Git</code><br>以下為<code> windows</code> 環境下示範 ，開始選單&gt; 所有程式&gt; <code>Git</code>&gt; <code>Git Bash</code><br>然後開啟<code> Git Bash</code><br><img src="/images/git01/git1.png"></p>
<h3 id="讓我們瞭解基本的-command-指令"><a href="#讓我們瞭解基本的-command-指令" class="headerlink" title="讓我們瞭解基本的 command 指令"></a>讓我們瞭解基本的 <code>command</code> 指令</h3><ol>
<li>移動路徑：cd 路徑</li>
<li>回上一層：cd .. </li>
<li>開新資料夾： mkdir 資料夾名稱</li>
<li>開新檔案： touch 檔案名稱<h3 id="設定"><a href="#設定" class="headerlink" title="設定"></a>設定</h3>首先先設定使用者的資料，這些資訊將作為提交者資訊顯示在版本控制的歷史記錄中。<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name &quot;&lt;使用者名字&gt;&quot;</span><br><span class="line">$ git config --global user.email &quot;&lt;電子信箱&gt;&quot;</span><br><span class="line">$ git config --list &#x2F;&#x2F;來確認使用者資料</span><br></pre></td></tr></table></figure>
<img src="/images/git01/git2.png"><h2 id="Git-基礎操作"><a href="#Git-基礎操作" class="headerlink" title="Git 基礎操作"></a>Git 基礎操作</h2><h3 id="創建-Git"><a href="#創建-Git" class="headerlink" title="創建 Git"></a>創建 Git</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">新增一個資料夾</span><br><span class="line">cd 資料夾的路經 </span><br><span class="line">$ git init &#x2F;&#x2F;開啟一個新的 git </span><br><span class="line">$ touch index.html &#x2F;&#x2F;建立一個檔案,可依自己需求建立，此示範為 index.html</span><br></pre></td></tr></table></figure>
<img src="/images/git01/git3.png"><h3 id="確認工作目錄與索引的狀態"><a href="#確認工作目錄與索引的狀態" class="headerlink" title="確認工作目錄與索引的狀態"></a>確認工作目錄與索引的狀態</h3>從下圖我們得知檔案還未 <code>commit</code> , 系統建議我們先把它加入索引,不然會 <code>commit </code>不到<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git status </span><br></pre></td></tr></table></figure>
<img src="/images/git01/git4.png"><h3 id="將檔案加入至索引"><a href="#將檔案加入至索引" class="headerlink" title="將檔案加入至索引"></a>將檔案加入至索引</h3>透過 <code>$ git status</code>，我們得知檔案已被加入索引。<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git add &#39;檔案名稱&#39; &#x2F;&#x2F;加入指定檔案</span><br><span class="line">$ git add . &#x2F;&#x2F;未加入的檔案一次加入</span><br><span class="line">$ git status</span><br></pre></td></tr></table></figure>
<img src="/images/git01/git5.png"><h3 id="執行commit命令提交檔案"><a href="#執行commit命令提交檔案" class="headerlink" title="執行commit命令提交檔案"></a>執行<code>commit</code>命令提交檔案</h3>最後只要執行 <code>git commit -m &quot;更新註解&quot;</code> 就可以將本次更新的內容提交到數據庫了。<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git commit -m &quot;update1&quot; </span><br><span class="line">$ git log &#x2F;&#x2F;查詢提交記錄</span><br></pre></td></tr></table></figure>
<img src="/images/git01/git6.png"><h2 id="遠端數據庫-GitHub"><a href="#遠端數據庫-GitHub" class="headerlink" title="遠端數據庫 GitHub"></a>遠端數據庫 GitHub</h2><h3 id="申請-GitHub-帳號"><a href="#申請-GitHub-帳號" class="headerlink" title="申請 GitHub 帳號"></a>申請 <a href="https://github.com/">GitHub</a> 帳號</h3>申請完 <code>GitHub</code> 帳號，我們要創建一個資料夾，來當遠端數據庫。<br><img src="/images/git01/git7.png"><br><img src="/images/git01/git8.png"><br><img src="/images/git01/git9.png"></li>
</ol>
<h3 id="連結至-GitHub-遠端數據庫"><a href="#連結至-GitHub-遠端數據庫" class="headerlink" title="連結至 GitHub 遠端數據庫"></a>連結至 GitHub 遠端數據庫</h3><p>透過 <code>$ git clone &#39;GitHub 的 URL&#39;</code>，連結至 <code>GitHub</code> 的遠端數據庫</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git clone &#39;GitHub 的 URL&#39;</span><br></pre></td></tr></table></figure>
<p><img src="/images/git01/git9.5.png"></p>
<h3 id="上傳至-GitHub-專案"><a href="#上傳至-GitHub-專案" class="headerlink" title="上傳至 GitHub 專案"></a>上傳至 GitHub 專案</h3><p>透過 <code>$ git push </code>將本地端數據庫上傳至雲端數據庫 ，會要求你輸入 <code>GitHub</code> 的帳號密碼以確認。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git push</span><br></pre></td></tr></table></figure>
<p><img src="/images/git01/git10.png"><br><img src="/images/git01/git11.png"><br><img src="/images/git01/git12.png"></p>
<blockquote>
<p>操作過一次流程，我們就瞭解<br><code>$ git init</code> 建立工作目錄<br><code>$ git add .</code> 把工作目錄的檔案加入索引<br><code> $ git commit -m &#39;&#39;</code> 將索引的檔案提交至本地數據庫<br> <code>$ git clone &#39;URL&#39;</code> 連接至遠端數據庫<br> <code>$ git push</code>  本地端數據庫上傳至雲端數據庫</p>
</blockquote>
<p><img src="/images/git01/git13.png"></p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Git branch 合併 Merge Rebase</title>
    <url>/20200811/33161/</url>
    <content><![CDATA[<h1 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h1><p>在開發中我們會有許多版本，像是開發版、測試版，測試功能都正常，才會合併到上線版。</p>
<blockquote>
<p>分支就像是影分身術的概念，而我們會透過 <code>git </code>的指令，來取需要分身的部分。 </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">新增分支：git branch 分支名稱</span><br><span class="line">查看分支：git branch </span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>HEAD</code> 表示目前在哪裡，預設是指向 <code>master</code></p>
</blockquote>
<p><img src="/images/git02/git1.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">切換分支：git checkout 分支名稱</span><br><span class="line">刪除分支：git branch -d 分支名稱 、-D 是強制刪除</span><br><span class="line">還原上個版本：git reset HEAD^</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>HEAD</code> 代表目前位置<br><code>HEAD^</code> 代表 HEAD 往前一個版本，<code>HEAD^^</code> 代表 HEAD 往前二個版本<br><code>HEAD~1 </code>代表 HEAD 往前一個版本，<code>HEAD~4 </code>代表 HEAD 往前四個版本 </p>
</blockquote>
<p><img src="/images/git02/git2.png"><br><img src="/images/git02/git3.png"><br><img src="/images/git02/git4.png"></p>
<h1 id="分支合併"><a href="#分支合併" class="headerlink" title="分支合併"></a>分支合併</h1><h2 id="Merge"><a href="#Merge" class="headerlink" title="Merge"></a>Merge</h2><p>在使用 <code>merge</code> 合併分支的時候，<code>git</code> 預設會以 <code>fast-forward</code> 的模式進行，那什麼是 <code>fast-forward</code> 和 <code>no-fast-forward</code> 呢？</p>
<h4 id="fast-forward"><a href="#fast-forward" class="headerlink" title="fast-forward"></a>fast-forward</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git merge 分支名稱</span><br></pre></td></tr></table></figure>
<p><img src="https://www.maxlist.xyz/wp-content/uploads/2020/05/merge_fast_foard.gif"><br><a href="https://dev.to/lydiahallie/cs-visualized-useful-git-commands-37p1#merge">Gif 來源：CS Visualized</a></p>
<h4 id="no-fast-forward"><a href="#no-fast-forward" class="headerlink" title="no-fast-forward"></a>no-fast-forward</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git merge 分支名稱 --no-ff</span><br></pre></td></tr></table></figure>
<p><img src="https://www.maxlist.xyz/wp-content/uploads/2020/05/merge_no_fast_forward.gif"><br><a href="https://dev.to/lydiahallie/cs-visualized-useful-git-commands-37p1#merge">Gif 來源：CS Visualized</a></p>
<p>可以很清楚的看到同樣都是 <code>merge</code>，使用<code> no-fast-forward</code> 的模式，會長出小耳朵，可以讓成員在日後很清楚辨識不同的 <code>Commit</code> 歷程，但小耳朵過多會造成混亂，所以會需要 fast-forward 用來 <code>merge</code> 些較不重要的 <code>Commit</code>，像是零碎的 <code>bug fix</code>，保持 <code>Commit</code> 的乾淨。</p>
<blockquote>
<p>重要的合併用 <code>git merge 分支名稱 --no-ff</code><br>不重要的合併用 <code>git merge 分支名稱</code></p>
</blockquote>
<h3 id="衝突"><a href="#衝突" class="headerlink" title="衝突"></a>衝突</h3><p>當同時修改同一個檔案的同一行code，就會發生衝突，<br>因為<code> git</code> 無法知道哪個才是正確的內容，<br>這時就需要雙方溝通，看要用誰的code。</p>
<p>假設我們在 <code>cat </code>分支修改了 <code>index.html</code> 的內容如下：<br><img src="/images/git02/git5.png"><br>然後在 <code>dog</code> 分支剛好也修改了 <code>index.html</code>，內容如下：<br><img src="/images/git02/git6.png"><br>這時候進行合併，發現因為第 9 行重複，所以產生了衝突，<br>此時狀態，已被放置至暫存區。<br>選要用哪個內容，在跑過一次 <code>Commit</code> 流程，就解決衝突了。<br><img src="/images/git02/git7.png"><br><img src="/images/git02/git8.png"></p>
<h2 id="Rebase"><a href="#Rebase" class="headerlink" title="Rebase"></a>Rebase</h2><p>從字面上來看，「rebase」是「re」加上「base」，翻成中文大概是「重新定義分支的參考基準」的意思。</p>
<h4 id="合併版本"><a href="#合併版本" class="headerlink" title="合併版本"></a>合併版本</h4><p><img src="https://www.maxlist.xyz/wp-content/uploads/2020/05/git_rebase.gif"><br><a href="https://dev.to/lydiahallie/cs-visualized-useful-git-commands-37p1#merge">Gif 來源：CS Visualized</a></p>
<h4 id="修改歷史-commit-紀錄"><a href="#修改歷史-commit-紀錄" class="headerlink" title="修改歷史 commit 紀錄"></a>修改歷史 commit 紀錄</h4><p><img src="https://www.maxlist.xyz/wp-content/uploads/2020/05/git_rebase_i.gif"><br><a href="https://dev.to/lydiahallie/cs-visualized-useful-git-commands-37p1#merge">Gif 來源：CS Visualized</a></p>
<h4 id="使用-Rebase-來合併分支"><a href="#使用-Rebase-來合併分支" class="headerlink" title="使用 Rebase 來合併分支"></a>使用 Rebase 來合併分支</h4><p>優點:很自由可以自己決定歷史順序<br>缺點:有時候恍神失智，忘了自己 <code>Rebase</code> 到哪，<br>不小心弄壞了還不知道怎麼 <code>reset</code> 回來 (¬_¬)，<br>發生衝突時會停在一半，對不熟悉 <code>Rebase</code> 的人來說是個困擾</p>
<h4 id="使用時機"><a href="#使用時機" class="headerlink" title="使用時機"></a>使用時機</h4><p>通常在還沒有推（<code>Push</code>）出去但感覺得有點亂（或太瑣碎）的 <code>Commit</code>，可以先使用 <code>Rebase</code> 分支來整理完再推出去。但如同前面提到的，<code>Rebase</code> 等於是修改歷史，修改已經推出去的歷史可能會對其它人帶來困擾，所以對於已經推出去的內容，非必要的話請盡量不要使用 <code>Rebase</code>。</p>
<h4 id="技術總結"><a href="#技術總結" class="headerlink" title="技術總結:"></a>技術總結:</h4><blockquote>
<p>創立 <code>branch</code> 用 <code>git branch 分支名稱</code><br>切換 <code>HEAD</code> 位置 <code>git ckeckout 位置</code><br>合併到主要版本用 <code>git merge 分支名稱 --no-ff</code><br>整理 <code>commit</code> 點 可以用 <code>git rebase</code> 和 <code>git merge</code></p>
</blockquote>
<h3 id="參考文章"><a href="#參考文章" class="headerlink" title="參考文章"></a>參考文章</h3><p><a href="https://gitbook.tw/">為你自己學 Git</a></p>
<h3 id="練習-Git-小遊戲"><a href="#練習-Git-小遊戲" class="headerlink" title="練習 Git 小遊戲"></a>練習 Git 小遊戲</h3><p><a href="https://learngitbranching.js.org/?locale=zh_TW">Learn Git Branching</a></p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
</search>
